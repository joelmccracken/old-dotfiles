#+PROPERTY: header-args :mkdirp yes
#+STARTUP: showall
#+TITLE: Personal Workstation Automation with Chef-Solo and Pivotal's Sprout
* COMMENT meta
** running these scripts
   1. tangle.
   2. run install-chef-standalone.sh
   3. run create-personal-chef-repo.sh
   4. run run-chef.sh
   5. run finishing.sh
   After the inital set up, simply tangling/and running run-chef
   should work.
** resetting
   rm -rf !(dotfiles-chef.org) .*
* Introduction
  This is my personal automation setup.

  The structure of this whole thing very largely based off of
  the [[http://gettingstartedwithchef.com/first-steps-with-chef.html][getting started with chef]] tutorial.
* history
** Installing Chef's standalone ruby & supporting software
#+BEGIN_SRC sh
curl -LO https://www.opscode.com/chef/install.sh
sudo bash install.sh
rm -rf install.sh
#+END_SRC
** setting up the chef file structure
#+BEGIN_SRC sh
  # originally was http://github.com/opscode/chef-repo/tarball/master
  # but I cloned it in case anything changes upstream

  curl -LO http://github.com/joelmccracken/chef-repo/tarball/master
  tar -zxf master

  # this would be opscode-chef-repo*
  # if you use the opscode repository

  mv joelmccracken-chef-repo* chef-repo
  rm master
#+END_SRC
#+BEGIN_SRC sh
  cd chef-repo
  git init .
  # this file will be deleted later anyway,
  # but it is easier to delete it rght now
  rm cookbooks/README.md
  git add .
  git commit -m 'initial import from opscode/chefrepo'
#+END_SRC
#+BEGIN_SRC sh
  cd ../
  cp -r chef-repo/{*,.*} .
  rm -rf chef-repo
#+END_SRC
** create personal cookbook:
#+BEGIN_SRC sh
  /opt/chef/bin/knife cookbook create personal
#+END_SRC
** add all these files to git
#+BEGIN_SRC sh
  git add .chef/knife.rb
  git add Cheffile
  git add create-personal-chef-repo.sh
  git add install-chef-standalone.sh
  git add dotfiles-chef.org
  git add run-chef.sh
  git add site-cookbooks
  git add solo.json
  git add solo.rb
  git add finishing.sh

  git commit -m 'include tangled output files'
#+END_SRC
** adding gitignores
#+BEGIN_SRC sh
  echo -e "\ncookbooks\n" >> .gitignore
  echo -e "tmp\n" >> .gitignore
  git add .gitignore

  git commit -m 'librarian-chef gitignores'
#+END_SRC
* integrating librarian-chef

knife configuration file:

#+BEGIN_SRC ruby :tangle ./.chef/knife.rb
  site_cookbooks = File.expand_path(File.join File.dirname(__FILE__), "../", "site-cookbooks")
  cookbook_path [ site_cookbooks ]
#+END_SRC

Cheffile:

#+BEGIN_SRC ruby :tangle ./Cheffile
  # -*- mode: ruby -*-

  site 'http://community.opscode.com/api/v1'

  cookbook 'sprout-osx-base',
    :git => 'git://github.com/pivotal-sprout/sprout.git',
    :ref => 'mountain-lion',
    :path => 'sprout-osx-base'

  cookbook 'pivotal_workstation',
    :git => 'git://github.com/pivotal-sprout/sprout.git',
    :ref => 'mountain-lion',
    :path => 'pivotal_workstation'

  cookbook 'sprout-osx-apps',
    :git => 'git://github.com/pivotal-sprout/sprout.git',
    :ref => 'mountain-lion',
    :path => 'sprout-osx-apps'

  cookbook 'sprout-osx-settings',
    :git => 'git://github.com/pivotal-sprout/sprout.git',
    :ref => 'mountain-lion',
    :path => 'sprout-osx-settings'

  cookbook 'sprout-pivotal',
    :git => 'git://github.com/pivotal-sprout/sprout.git',
    :ref => 'mountain-lion',
    :path => 'sprout-pivotal'

  cookbook 'osx',
    :git => 'git://github.com/pivotal-sprout/sprout.git',
    :ref => 'mountain-lion',
    :path => 'osx'
#+END_SRC


* the script that converges the system

Before we go into anything further, we should build the script that
will actually run chef and converge the system.

Because RVM, the environment needs resetting.

#+NAME: reset-environment
#+BEGIN_SRC sh
  # necessary for the chef-version of ruby not to
  # be confused about locations of files,
  # at least on my system. YMMV
  unset GEM_HOME
  unset GEM_PATH

  # make sure to put the omnibus-installed version of chef at
  # the front of the path
  PATH="/opt/chef/bin:/opt/chef/embedded/bin:$PATH"
#+END_SRC

The final script:

#+BEGIN_SRC sh :tangle ./run-chef.sh :shebang "#!/bin/bash" :noweb yes
  # include reset environment code
  <<reset-environment>>

  # absolute paths to executables
  # are used to avoid problems with RVM.
  sudo /opt/chef/embedded/bin/gem install librarian-chef
  /opt/chef/embedded/bin/librarian-chef install --verbose
  sudo /opt/chef/bin/chef-solo -c solo.rb -j solo.json
#+END_SRC

~solo.rb~ and ~solo.json~ are defined below.

* the remaining chef files
With chef solo, we need two files:
- solo.rb, which provides settings for chef
- solo.json, which provides "node attributes", which basically are
  settings for configuring the node. For example, usernames, locations
  of directories to place things, and recipes to run are all things
  that should go in solo.json

#+BEGIN_SRC ruby :tangle ./solo.rb
  current_dir = File.expand_path(File.dirname __FILE__)
  file_cache_path current_dir
  cookbook_path [File.join(current_dir, "cookbooks"),
                 File.join(current_dir, "site-cookbooks")]
#+END_SRC

#+BEGIN_SRC js :tangle ./solo.json
  {
    "run_list": [
      "recipe[sprout-osx-apps::emacs]",
      "recipe[sprout-osx-apps::firefox]",
      "recipe[personal]"
    ]
  }
#+END_SRC

To start out
* a simple recipe
#+BEGIN_SRC ruby :tangle ./site-cookbooks/personal/recipes/default.rb
  #
  # default recipe
  #

  home_dir = Dir.home(node['username'])

  directory File.join(home_dir, "var") do
    owner node['username']
    group node['username']
    mode "0755"
    recursive true
    action :create
  end

  directory File.join(home_dir, "var", "secrets") do
    owner node['username']
    group node['username']
    mode "0700"
    recursive true
    action :create
  end
#+END_SRC

#+BEGIN_SRC ruby :tangle ./site-cookbooks/personal/attributes/default.rb
default['username'] = 'joel'
#+END_SRC
* finishing
The final to do is to commit the Cheffile.lock

#+BEGIN_SRC sh :tangle ./finishing.sh :shebang "#!/bin/bash"
git add Cheffile.lock
git commit -m 'cheffile.lock update'
#+END_SRC

* resources


http://gettingstartedwithchef.com/first-steps-with-chef.html
http://docs.opscode.com/install_omnibus.html
http://www.getchef.com/chef/install/


